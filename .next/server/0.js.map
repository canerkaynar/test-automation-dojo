{"version":3,"file":"0.js","sources":["webpack:///./components/Inspector.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Hook, Console, Decode } from 'console-feed';\n\nconst InspectorStyle = styled.div`\n    height: calc(100% - 30px);\n    width: 100%;\n    color: #aaa;\n    border: 1px solid #585858;\n    background-color: #373737;\n    border-radius: 2px;\n    position: relative;\n\n    .console-input {\n        border: 0;\n        background-color: #373737;\n        color: ${props => props.theme.lightgrey};\n        margin-left: 7px;\n        width: 90%;\n        font-size: 13px;\n        height: 30px;\n        font-family: Menlo, monospace;\n    }\n    .console-input:focus {\n        outline: none;\n    }\n    .console-input-wrapper {\n        position: absolute;\n        width: 100%;\n        border-top: 1px solid #585858;\n        background-color: #373737;\n        bottom: 0;\n    }\n    .console-feed {\n        overflow: auto;\n        width: 100%;\n    }\n    .cursor {\n        margin-left: 12px;\n        vertical-align: middle;\n        color: ${props => props.theme.lightgrey};\n    }\n    .inner {\n        background: #242424;\n        position: relative;\n        width: 100%;\n        overflow: scroll;\n        height: calc(100% - 30px);\n    }\n    [data-method = log] {\n        line-height: normal;\n        margin: 0;\n        padding: 6px 3px 4px;\n    }\n`;\n\nconst ConsoleTitle = styled.span`\n    color: ${props => props.theme.lightgrey};\n    margin-left: 2px;\n    font-family: 'roboto condensed bold';\n`;\n\nconst ClearButton = styled.button`\n    float: right;\n    height: 23px;\n    margin-right: 2px;\n    border-radius: 6px;\n    background-color: #373737;\n    color: ${props => props.theme.lightgrey};\n    border-color: #00c0d7;\n    cursor: pointer;\n    :focus {\n        outline: none;\n    }\n`;\n\nclass Inspector extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logs: [\n                {\n                  method: 'result',\n                  data: ['Result']\n                },\n                {\n                  method: 'command',\n                  data: ['Command']\n                }\n              ],\n              filter: ['log'],\n            value: ''\n          }\n    }\n\n    componentDidMount() {\n        Hook(window.console, log => {\n          this.setState({ logs: [...this.state.logs, Decode(log)] });\n        });\n        this.scrollToBottom();\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n      \n      componentDidUpdate(prevProps, prevState) {\n        if (this.state.logs.length !== prevState.logs.length) {\n            this.scrollToBottom();\n        }\n    }\n\n    keyPress(e){\n        if(e.keyCode === 13){\n            console.log(e.target.value);\n            try {\n                let val = (0, eval)(e.target.value);\n                window.console.log(val !== undefined ? val : 'undefined');\n            } catch (err) {\n                console.log(err);\n            }\n        }\n     }\n\n    handleChange = (e) => {\n        this.setState({ \n            ...this.state,\n            value: e.target.value \n        });\n    }\n\n    clearLogs = () => {\n        this.setState({\n            ...this.state,\n            logs: []\n        },() => console.log(\"Console logs was cleared!\"));\n    }\n\n    render() {\n        const { logs } = this.state;\n        return (\n            <React.Fragment>\n                <ConsoleTitle>CONSOLE</ConsoleTitle>\n                <ClearButton onClick={this.clearLogs}>CLEAR</ClearButton>\n                <InspectorStyle>\n                    <div className=\"inner\">\n                        <div className=\"console-feed\">\n                            <Console logs={logs} variant=\"dark\" filter={this.state.filter}/>\n                            <div style={{ float:\"left\", clear: \"both\" }}\n                                ref={(el) => { this.messagesEnd = el; }}>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"console-input-wrapper\">\n                        <span className=\"cursor\">></span>\n                        <input className=\"console-input\" type=\"text\" value={this.state.value} onKeyDown={this.keyPress} \n                        onChange={this.handleChange}/>\n                    </div>\n                </InspectorStyle>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Inspector;\n\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAYA;AAAA;AAwBA;AAAA;AAgBA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA0BA;AAAA;AAAA;AACA;AACA;AA5BA;AAgDA;AAEA;AAFA;AAIA;AACA;AArDA;AAuDA;AAEA;AAFA;AAGA;AAAA;AACA;AACA;AA1DA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAZA;AAFA;AAgBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAMA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgBA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AArFA;AACA;AAuFA;;;;A","sourceRoot":""}